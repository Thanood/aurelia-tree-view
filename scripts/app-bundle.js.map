{"version":3,"sources":["app.js","environment.js","main.js","nav-bar.js","route-highlight.js","sample-runner.js","about/about.js","documentation/documentation.js","installation/installation.js","help/help.js","help/index.js","shared/au-code.js","shared/collapse-panel.js","shared/jsonValueConverter.js","shared/logger.js","shared/markdown.js","shared/registry.js","samples/index.js","samples/main/basic-use.js","samples/main/custom-compare.js","samples/main/drag-and-drop.js","samples/main/events.js","samples/main/expand-on-focus.js","samples/main/index.js","samples/main/init-from-json.js","samples/main/lazy-load.js","samples/main/multi-select.js","samples/main/node-template-commands.js","samples/main/node-template.js","samples/main/payload.js","samples/main/preselect.js","samples/main/select-on-focus.js","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/app.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/nav-bar.css","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/nav-bar.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/shared/showcase.css","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/sample-runner.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/drag-and-drop.css","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/about/about.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/multi-select.css","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/documentation/documentation.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/node-template-commands.css","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/help/help.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/help/index.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/installation/installation.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/index.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/shared/collapse-panel.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/shared/logger.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/shared/showcase.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/basic-use.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/custom-compare.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/drag-and-drop.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/events.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/expand-on-focus.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/init-from-json.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/lazy-load.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/multi-select.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/node-template-commands.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/node-template.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/payload.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/preselect.html","C:/Users/Daniel/Documents/Entwicklung/js/aurelia/aurelia-tree-view-gh/src/samples/main/select-on-focus.html"],"names":["App","configureRouter","config","router","title","map","name","route","moduleId","redirect","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","developmentLogging","plugin","useAll","globalResources","start","then","au","setRoot","NavBar","RouteHighlight","Element","element","eventAggregator","ea","subscription","subscribe","refresh","routesChanged","instruction","currentInstruction","isActive","activeRoute","Array","isArray","routes","includes","highlight","unhighlight","classList","add","remove","detached","SampleRunner","taskQueue","activate","params","sample","navModel","Error","restart","old","undefined","queueTask","determineActivationStrategy","replace","About","Documentation","Installation","Help","Index","injectStyles","AuCode","compiler","resources","parseCode","targetInstruction","loader","html","behaviorInstructions","urlChanged","url","loadText","text","render","attached","jQuery","pre","document","createElement","appendChild","innerHTML","Prism","languages","language","dedent","decodeHtml","txt","value","str","match","indent","Math","min","apply","el","length","re","RegExp","CollapsePanel","toggle","allowCollapse","collapsed","JsonValueConverter","toView","JSON","stringify","Logger","overrideStyles","log","message","isError","container","lastContainer","$","counter","find","detach","lastMessage","count","append","css","marginTop","backgroundColor","prependTo","animate","error","each","i","attr","fx","step","state","end","getColor","elem","getRGB","style","max","parseInt","pos","join","color","result","constructor","exec","trim","toLowerCase","nodeName","parentNode","showdown","AuMarkdown","converter","Converter","makeHtml","PR","prettyPrint","event","CustomEvent","bubbles","dispatchEvent","Registry","load","control","registry","parse","registryString","_sample","samples","path","getTitleFromRoute","nav","files","forEach","extension","default","push","Object","keys","charAt","toUpperCase","slice","BasicUse","nodes","texas","newYork","oregon","california","clearSelection","tree","CustomCompare","selected","manhattan","brooklyn","bronx","queens","statenIsland","window","setTimeout","resolve","children","compareNode","a","b","DragAndDrop","dragApi","getNodes","activateDnd","deactivateDnd","viewModel","isContainer","tagName","revertOnSpill","_viewModel","trackDrop","trackOver","destroy","on","source","sibling","console","cancel","sourceViewModel","targetViewModel","siblingViewModel","moveNode","Events","onCollapsed","e","logger","detail","node","onExpanded","onFocus","onSelect","titles","ExpandOnFocus","InitFromJson","createFromJSON","rnd","floor","random","LazyLoad","forceLazyLoad","reject","MultiSelect","selectedNodes","fourLevels","fiveLevels","stockCommands","NodeTemplateCommands","executeCommand","cmd","model","commands","nodeInterface","bind","NodeTemplate","clickedNode","nodeClicked","Payload","test","num","payload","PreSelect","SelectOnFocus"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  configureRouter(config, router) {\n    config.title = 'Aurelia Skeleton Bridge App';\n\n    config.map([\n      { name: 'about',            route: ['about'],           moduleId: 'about/about',                 title: 'About' },\n      { name: 'catalog-index',    route: 'catalog-index',     moduleId: 'catalog-index/controls',      title: 'Catalog-index'},\n      { name: 'documentation',    route: 'documentation',     moduleId: 'documentation/documentation', title: 'Documentation'},\n      { name: 'help',             route: 'help',              moduleId: 'help/help',                   title: 'Help' },\n      { name: 'home',             route: '',                  redirect: 'samples' },\n      { name: 'installation',     route: 'installation',      moduleId: 'installation/installation',   title: 'Installation' },\n      { name: 'samples',          route: 'samples',           moduleId: 'samples/index',               title: 'Samples' }\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import 'bootstrap';\n\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .developmentLogging()\n    .plugin('aurelia-tree-view', plugin => plugin.useAll());\n\n  aurelia.use.globalResources('shared/collapse-panel');\n  aurelia.use.globalResources('shared/markdown');\n  aurelia.use.globalResources('shared/logger');\n  aurelia.use.globalResources('shared/au-code');\n  aurelia.use.globalResources('shared/jsonValueConverter');\n\n  aurelia.start()\n    .then(au => au.setRoot('app'));\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class NavBar {\n  @bindable router = null;\n}\n","import {inject, bindable, customAttribute} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\n\n@inject(Element, Router, EventAggregator)\n@customAttribute('route-highlight')\nexport class RouteHighlight {\n\n    @bindable routes;\n\n    constructor(element, router, eventAggregator) {\n      this.element = element;\n      this.router = router;\n      this.ea = eventAggregator;\n\n      this.subscription = this.ea.subscribe('router:navigation:complete', () => this.refresh());\n    }\n\n    routesChanged() {\n      this.refresh();\n    }\n\n    refresh() {\n      let instruction = this.router.currentInstruction;\n      let isActive = false;\n\n      if (instruction) {\n        let activeRoute = instruction.config.name;\n\n        if (Array.isArray(this.routes)) {\n          isActive = this.routes.includes(activeRoute);\n        } else {\n          isActive = this.routes === activeRoute;\n        }\n      }\n\n      if (isActive) {\n        this.highlight();\n      } else {\n        this.unhighlight();\n      }\n    }\n\n    highlight() {\n      //jQuery(this.element).addClass('active');\n      this.element.classList.add('active');\n    }\n\n    unhighlight() {\n      //jQuery(this.element).removeClass('active');\n      this.element.classList.remove('active');\n    }\n\n    detached() {\n      if (this.subscription) {\n        this.subscription();\n      }\n    }\n}\n","import {inject} from 'aurelia-framework';\nimport {activationStrategy} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TaskQueue} from 'aurelia-framework';\n\n@inject(EventAggregator, TaskQueue)\nexport class SampleRunner {\n\n  constructor(ea, taskQueue) {\n    this.taskQueue = taskQueue;\n    this.ea = ea;\n  }\n\n  activate(params, route) {\n    let sample = route.navModel.config.sample;\n\n    if (!sample) throw new Error('Route does not contain a \\'sample\\' property');\n\n    this.sample = sample;\n  }\n\n  restart() {\n    let old = this.sample;\n    this.sample = undefined;\n    this.taskQueue.queueTask(() => {\n      this.sample = old;\n    });\n  }\n\n  determineActivationStrategy() {\n    return activationStrategy.replace;\n  }\n}\n","export class About {}\n","export class Documentation {\n\n}\n","export class Installation {}\n","\nexport class Help { }\n","export class Index {\n  configureRouter(config, router) {\n    config.map([\n      { name: 'default',           route: ['help', ''],         moduleId: './help' },\n      { name: 'free-support',      route: ['free-support', ''], moduleId: './help',   title: 'Support'},\n      { name: 'support-exchange',  route: 'support-exchange',   moduleId: './help',   title: 'Support Exchange'}\n    ]);\n  }\n}\n","import {inject, bindable, noView, customElement, processContent, TargetInstruction, DOM} from 'aurelia-framework';\nimport prism from 'prism';\n// import 'prism/themes/prism.css!';\nimport styles from 'text!prism/themes/prism.css';\nimport {Loader}  from 'aurelia-loader';\n\nDOM.injectStyles(styles);\n\n@processContent((compiler, resources, element, instruction) => {\n  parseCode(element, resources, instruction);\n  return true;\n})\n@customElement('au-code')\n@noView\n@inject(Element, TargetInstruction, Loader)\nexport class AuCode {\n\n  @bindable language;\n  @bindable url;\n\n  constructor(element, targetInstruction, loader) {\n    this.element = element;\n    this.loader = loader;\n    this.html = targetInstruction.behaviorInstructions[0].html;\n  }\n\n  urlChanged() {\n    if (this.url) {\n      this.loader.loadText(this.url)\n      .then(text => {\n        this.html = text;\n        this.render();\n      });\n    } else {\n      this.html = '';\n      this.render();\n    }\n  }\n\n  attached() {\n    this.render();\n  }\n\n  render() {\n    jQuery('pre', this.element).remove();\n    let pre = document.createElement('pre');\n    this.element.appendChild(pre);\n    pre.innerHTML = prism.highlight(this.html, Prism.languages[this.language]);\n  }\n}\n\nfunction parseCode(element, resources, instruction) {\n  instruction.html = dedent(decodeHtml(element.innerHTML));\n}\n\nfunction decodeHtml(html) {\n  let txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n}\n\nfunction dedent(str) {\n  let match = str.match(/^[ \\t]*(?=\\S)/gm);\n  if (!match) return str;\n\n  let indent = Math.min.apply(Math, match.map(function(el) {\n    return el.length;\n  }));\n\n  let re = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');\n  return indent > 0 ? str.replace(re, '') : str;\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class CollapsePanel {\n  @bindable panelTitle;\n  @bindable footer;\n  @bindable allowCollapse = false;\n  @bindable collapsed = false;\n  @bindable panelClass = 'default';\n\n  toggle() {\n    if (this.allowCollapse) {\n      this.collapsed = !this.collapsed;\n    }\n  }\n}\n","export class JsonValueConverter {\n  toView(value) {\n    return JSON.stringify(value);\n  }\n}\n","export class Logger {\n  attached() {\n    this.overrideStyles();\n  }\n\n\n  log(message, isError, container) {\n    let lastContainer = $('.console div:first', container);\n    let counter = lastContainer.find('.count').detach();\n    let lastMessage = lastContainer.text();\n    let count = 1 * (counter.text() || 1);\n\n    lastContainer.append(counter);\n\n    if (!lastContainer.length || message !== lastMessage) {\n      $('<div' + (isError ? ' class=\\'error\\'' : '') + '/>')\n      .css({\n        marginTop: -24,\n        backgroundColor: isError ? '#ffbbbb' : '#b2ebf2'\n      })\n      .html(message)\n      .prependTo($('.console', container))\n      .animate({ marginTop: 0 }, 300)\n      .animate({ backgroundColor: isError ? '#ffdddd' : '#ffffff' }, 800);\n    } else {\n      count++;\n\n      if (counter.length) {\n        counter.html(count);\n      } else {\n        lastContainer.html(lastMessage)\n        .append('<span class=\\'count\\'>' + count + '</span>');\n      }\n    }\n  }\n\n  error(message) {\n    this.log(message, true);\n  }\n\n  overrideStyles() {\n    jQuery.each(['backgroundColor', 'borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'color', 'outlineColor'], function(i, attr) {\n      jQuery.fx.step[attr] = function(fx) {\n        if (!fx.state || typeof fx.end === typeof '') {\n          fx.start = getColor(fx.elem, attr);\n          fx.end = getRGB(fx.end);\n        }\n\n        fx.elem.style[attr] = ['rgb(', [\n          Math.max(Math.min(parseInt((fx.pos * (fx.end[0] - fx.start[0])) + fx.start[0], 10), 255), 0),\n          Math.max(Math.min(parseInt((fx.pos * (fx.end[1] - fx.start[1])) + fx.start[1], 10), 255), 0),\n          Math.max(Math.min(parseInt((fx.pos * (fx.end[2] - fx.start[2])) + fx.start[2], 10), 255), 0)\n        ].join(','), ')'].join('');\n      };\n    });\n  }\n}\n\n\n// Color Conversion functions from highlightFade\n// By Blair Mitchelmore\n// http://jquery.offput.ca/highlightFade/\n\n// Parse strings looking for color tuples [255,255,255]\nfunction getRGB(color) {\n  let result;\n\n  // Check if we're already dealing with an array of colors\n  if (color && color.constructor === Array && color.length === 3) {\n    return color;\n  }\n\n  // Look for rgb(num,num,num)\n  result = /rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(color);\n  if (result) {\n    return [parseInt(result[1], 10), parseInt(result[2], 10), parseInt(result[3], 10)];\n  }\n\n  // Look for #a0b1c2\n  result = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(color);\n  if (result) {\n    return [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n  }\n\n  // Otherwise, we're most likely dealing with a named color\n  return jQuery.trim(color).toLowerCase();\n}\n\nfunction getColor(elem, attr) {\n  let color;\n\n  do {\n    color = jQuery.css(elem, attr);\n\n    // Keep going until we find an element that has color, or we hit the body\n    if (color && color !== 'transparent' || jQuery.nodeName(elem, 'body')) {\n      break;\n    }\n\n    attr = 'backgroundColor';\n\n    elem = elem.parentNode;\n  } while (elem);\n\n  return getRGB(color);\n}\n","import {bindable, noView, inject, customElement} from 'aurelia-framework';\nimport * as showdown from 'showdown';\n// import 'google/code-prettify/loader/run_prettify';\n// import 'showdown-prettify';\nimport {Loader}  from 'aurelia-loader';\n\n@customElement('au-markdown')\n@noView\n@inject(Element, Loader)\nexport class AuMarkdown {\n\n  @bindable url;\n\n  constructor(element, loader) {\n    this.element = element;\n    this.loader = loader;\n    // this.converter = new showdown.Converter({extensions: ['prettify']});\n    this.converter = new showdown.Converter();\n  }\n\n  urlChanged() {\n    if (this.url) {\n      this.loader.loadText(`${this.url}`)\n      .then(text => {\n        this.element.innerHTML = this.converter.makeHtml(text);\n        PR.prettyPrint();\n      }).then(() => {\n        let event = new CustomEvent('loaded', {\n          bubbles: true\n        });\n        this.element.dispatchEvent(event);\n      });\n    } else {\n      this.element.innerHTML = '';\n    }\n  }\n}\n","import {inject, Loader} from 'aurelia-framework';\n\n@inject(Loader)\nexport class Registry {\n  constructor(loader) {\n    this.loader = loader;\n  }\n  load(config, control) {\n    return this.loader.loadText(`samples/${control}/registry.json`)\n    .then(registryString => {\n      let registry = JSON.parse(registryString);\n      config.title = registry.title;\n\n      let map = [];\n\n      for (let _sample of Object.keys(registry.samples)) {\n        let sample = registry.samples[_sample];\n\n        sample.path = `samples/${control}/${_sample}`;\n        sample.route = sample.route || _sample;\n        sample.title = sample.title || this.getTitleFromRoute(_sample);\n        sample.moduleId = sample.moduleId || 'sample-runner';\n        sample.nav = sample.nav || true;\n        sample.files = sample.files || ['html', 'js'];\n        sample.files.forEach(extension => {\n          sample[extension] = `${sample.path}.${extension}`;\n        });\n\n        if (sample.default === true) {\n          map.push({\n            title: sample.title,\n            redirect: sample.route,\n            route: '',\n            sample: sample\n          });\n        }\n\n        map.push({\n          title: sample.title,\n          nav: sample.nav,\n          moduleId: sample.moduleId,\n          route: sample.route,\n          sample: sample\n        });\n      }\n\n      config.map(map);\n    });\n  }\n\n  getTitleFromRoute(route) {\n    route = route.replace(/-/g, ' ');\n    route = route.charAt(0).toUpperCase() + route.slice(1);\n    return route;\n  }\n}\n","export class Index {\n\n  constructor() { }\n\n  configureRouter(config, router) {\n    config.title = 'Samples';\n\n    config.map([\n      { name: 'main', route: 'main', moduleId: './main/index', title: 'main' },\n      { name: 'default', route: '', redirect: 'main' }\n    ]);\n    this.router = router;\n  }\n}\n","import {NodeModel} from 'aurelia-tree-view';\n\nexport class BasicUse {\n  nodes = [];\n\n  attached() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', [\n        new NodeModel('Manhattan'),\n        new NodeModel('Brooklyn'),\n        new NodeModel('Bronx'),\n        new NodeModel('Queens'),\n        new NodeModel('Staten Island')\n      ]),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n    this.nodes = [texas, newYork, oregon, california];\n  }\n\n  clearSelection() {\n    this.tree.clearSelection();\n  }\n}\n","import {NodeModel} from 'aurelia-tree-view';\n\nexport class CustomCompare {\n  nodes = [];\n  selected = [];\n\n  attached() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let manhattan = new NodeModel('Manhattan');\n    let brooklyn = new NodeModel('Brooklyn');\n    let bronx = new NodeModel('Bronx');\n    let queens = new NodeModel('Queens');\n    let statenIsland = new NodeModel('Staten Island');\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', () => {\n        return new Promise(resolve => {\n          window.setTimeout(() => {\n            resolve([manhattan, brooklyn, bronx, queens, statenIsland]);\n          }, 500);\n        });\n      }),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n    this.nodes = [texas, newYork, oregon, california];\n    this.selected = [oregon, oregon.children[0], newYork, newYork.children[0], manhattan, brooklyn, bronx, queens, statenIsland];\n  }\n\n  compareNode(a, b) {\n    return a.title === b.title;\n  }\n}\n","import {NodeModel} from 'aurelia-tree-view';\nimport dragula from 'dragula';\n\nexport class DragAndDrop {\n  nodes = [];\n  dragApi = null;\n\n  attached() {\n    this.nodes = this.getNodes();\n    this.activateDnd(this.tree);\n  }\n\n  detached() {\n    this.deactivateDnd();\n  }\n\n  activateDnd(viewModel) {\n    this.dragApi = dragula({\n      isContainer: el => {\n        if (!el) {\n          return false;\n        }\n        // if (dragApi.dragging) {\n        //   return el.tagName === 'TREE-NODE';\n        // }\n        return el.tagName === 'TREE-NODE' || el === viewModel.element;\n        // return el.tagName === 'TREE-VIEW';\n      },\n      revertOnSpill: true\n    });\n    this.dragApi._viewModel = viewModel;\n    this.trackDrop(this.dragApi);\n    this.trackOver(this.dragApi);\n  }\n\n  deactivateDnd() {\n    this.dragApi.destroy();\n    this.dragApi = null;\n  }\n\n  trackDrop(dragApi) {\n    dragApi.on('drop', (el, container, source, sibling) => {\n      console.log('dragula drop from', source);\n      console.log('dragula drop on', container);\n      console.log('dragula drop sibling', sibling);\n      console.log('dragApi viewModel', dragApi._viewModel);\n      dragApi.cancel();\n      // container.au['tree-node'].viewModel.model.children.push(source.au['tree-node'].viewModel.model);\n      let sourceViewModel = source.au['tree-node'].viewModel;\n      let targetViewModel = (container.au['tree-node'] || container.au['tree-view']).viewModel;\n      // find sibling's tree-node parent\n      if (sibling !== null) {\n        while (sibling.tagName !== 'TREE-NODE') {\n          sibling = sibling.parentNode;\n        }\n      }\n      let siblingViewModel = (sibling) ? sibling.au['tree-node'].viewModel : null;\n      // dragApi._viewModel.moveNode(source.au['tree-node'].viewModel, (container.au['tree-node'] || container.au['tree-view']).viewModel);\n      // console.log(sourceViewModel, targetViewModel, siblingViewModel);\n      dragApi._viewModel.moveNode(sourceViewModel, targetViewModel, siblingViewModel);\n    });\n  }\n\n  trackOver(dragApi) {\n    dragApi.on('over', (el, container, source) => {\n      container.classList.add('drag-over');\n    });\n    dragApi.on('out', (el, container, source) => {\n      container.classList.remove('drag-over');\n    });\n  }\n\n  getNodes() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', [\n        new NodeModel('Manhattan'),\n        new NodeModel('Brooklyn'),\n        new NodeModel('Bronx'),\n        new NodeModel('Queens'),\n        new NodeModel('Staten Island')\n      ]),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n    return [texas, newYork, oregon, california];\n  }\n}\n","import {NodeModel} from 'aurelia-tree-view';\n\nexport class Events {\n  nodes = [];\n\n  attached() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', [\n        new NodeModel('Manhattan'),\n        new NodeModel('Brooklyn'),\n        new NodeModel('Bronx'),\n        new NodeModel('Queens'),\n        new NodeModel('Staten Island')\n      ]),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n    this.nodes = [texas, newYork, oregon, california];\n  }\n\n  onCollapsed(e) {\n    this.logger.log(`node collapsed: ${e.detail.node.title}`);\n  }\n\n  onExpanded(e) {\n    this.logger.log(`node expanded: ${e.detail.node.title}`);\n  }\n\n  onFocus(e) {\n    this.logger.log(`node focused: ${e.detail.node.title}`);\n  }\n\n  onSelect(e) {\n    console.log('[sample] events - ]', e);\n    let titles = e.detail.nodes.map(node => node.title).join(', ');\n    this.logger.log(`node selected: ${titles}`);\n  }\n}\n","import {NodeModel} from 'aurelia-tree-view';\r\n\r\nexport class ExpandOnFocus {\n  nodes = [];\r\n\r\n  attached() {\r\n    let texas = new NodeModel('Texas', [\r\n      new NodeModel('Austin'),\r\n      new NodeModel('Houston')\r\n    ]);\r\n\r\n    let newYork = new NodeModel('New York', [\r\n      new NodeModel('New York City', [\r\n        new NodeModel('Manhattan'),\r\n        new NodeModel('Brooklyn'),\r\n        new NodeModel('Bronx'),\r\n        new NodeModel('Queens'),\r\n        new NodeModel('Staten Island')\r\n      ]),\r\n      new NodeModel('Buffalo')]);\r\n\r\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\r\n\r\n    let california = new NodeModel('California', [\r\n      new NodeModel('Los Angeles'),\r\n      new NodeModel('San Francisco')\r\n    ]);\r\n    this.nodes = [texas, newYork, oregon, california];\r\n  }\r\n}\r\n","import {useView, inject} from 'aurelia-framework';\nimport {Registry} from 'shared/registry';\n\n@useView('shared/showcase.html')\n@inject(Registry)\nexport class Index {\n\n  constructor(registry) {\n    this.registry = registry;\n  }\n\n  configureRouter(config, router) {\n    this.router = router;\n\n    return this.registry.load(config, 'main');\n  }\n}\n","import {\r\n  NodeModel\r\n} from 'aurelia-tree-view';\r\n\r\nexport class InitFromJson {\r\n  nodes = [];\r\n\r\n  attached() {\r\n    this.nodes = NodeModel.createFromJSON(this.getNodes());\r\n  }\r\n\r\n  getNodes() {\r\n    return [{\r\n      title: 'Texas',\r\n      children: [{\r\n        title: 'Austin',\n        rnd: Math.floor(Math.random() * 1000)\n      }, {\r\n        title: 'Houston',\n        rnd: Math.floor(Math.random() * 1000)\n      }],\n      rnd: Math.floor(Math.random() * 1000)\n    }, {\r\n      title: 'New York',\r\n      children: [{\r\n        title: 'New York City',\r\n        children: [{\r\n          title: 'Manhattan'\n        }, {\r\n          title: 'Brooklyn'\n        }, {\r\n          title: 'Bronx'\n        }, {\r\n          title: 'Queens'\n        }, {\r\n          title: 'Staten Island'\n        }]\r\n      }, {\r\n        title: 'Buffalo'\r\n      }],\n      rnd: Math.floor(Math.random() * 1000)\n    }, {\r\n      title: 'Oregon',\r\n      children: [{\r\n        title: 'Portland'\r\n      }],\n      rnd: Math.floor(Math.random() * 1000)\n    }, {\r\n      title: 'California',\r\n      children: [{\r\n        title: 'Los Angeles'\r\n      }, {\r\n        title: 'San Francisco'\r\n      }],\n      rnd: Math.floor(Math.random() * 1000)\n    }];\r\n  }\r\n}\n","import {NodeModel} from 'aurelia-tree-view';\n\nexport class LazyLoad {\n  nodes = [];\n  forceLazyLoad = false;\n\n  attached() {\n    this.nodes = NodeModel.createFromJSON(this.getNodes());\n  }\n\n  getNodes() {\n    return [\n      {\n        title: 'Texas',\n        children: [\n          { title: 'Austin' },\n          { title: 'Houston' }\n        ]\n      }, {\n        title: 'New York',\n        children: [\n          {\n            title: 'New York City',\n            children: () => {\n              return new Promise((resolve, reject) => {\n                window.setTimeout(function() {\n                  resolve([\n                    { title: 'Manhattan' },\n                    { title: 'Brooklyn' },\n                    { title: 'Bronx' },\n                    { title: 'Queens' },\n                    { title: 'Staten Island' }\n                  ]);\n                }, 500);\n              });\n            }\n          }, {\n            title: 'Buffalo'\n          }\n        ]\n      }, {\n        title: 'Oregon',\n        children: [\n          { title: 'Portland' }\n        ]\n      }, {\n        title: 'California',\n        children: () => {\n          return new Promise((resolve, reject) => {\n            resolve([\n              // { title: 'Los Angeles' },\n              // { title: 'San Francisco' }\n            ]);\n          });\n        }\n      }\n    ];\n  }\n}\n","import {computedFrom} from 'aurelia-framework';\nimport {NodeModel} from 'aurelia-tree-view';\n\nexport class MultiSelect {\n  nodes = [];\n  selected = [];\n\n  attached() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', () => {\n        return new Promise((resolve, reject) => {\n          window.setTimeout(() => {\n            resolve([\n              new NodeModel('Manhattan'),\n              new NodeModel('Brooklyn'),\n              new NodeModel('Bronx'),\n              new NodeModel('Queens'),\n              new NodeModel('Staten Island')\n            ]);\n          }, 500);\n        });\n      }),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n\n    let fourLevels = new NodeModel('Four Levels (level 1)', [\n      new NodeModel('Level 2', [\n        new NodeModel('Level 3', [\n          new NodeModel('Level 4')\n        ])\n      ])\n    ]);\n\n    let fiveLevels = new NodeModel('Five Levels (level 1)', [\n      new NodeModel('Level 2', [\n        new NodeModel('Level 3', [\n          new NodeModel('Level 4', [\n            new NodeModel('Level 5')\n          ])\n        ])\n      ])\n    ]);\n\n    this.nodes = [texas, newYork, oregon, california, fourLevels, fiveLevels];\n  }\n\n  selectedNodes = '';\n  onSelect(e) {\n    this.selectedNodes = this.selected.map(node => node.title).join(', ');\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {NodeModel} from 'aurelia-tree-view';\n\nconst stockCommands = [\n  { title: 'edit' },\n  { title: 'delete' },\n  { title: 'export' },\n  { title: 'lock' }\n];\n\nexport class NodeTemplateCommands {\n  commands = [];\n  nodes = [];\n\n  nodeInterface = {\n    commands: [],\n    executeCommand: this.executeCommand.bind(this)\n  }\n\n  executeCommand(cmd, model) {\n    this.logger.log(`command execute: ${cmd.title} ${model.title}`);\n  }\n\n  constructor() {\n    // this.commands = stockCommands;\n    this.nodeInterface.commands = this.commands;\n  }\n\n  attached() {\n    // simulate fetching commands from a service\n    window.setTimeout(() => {\n      this.nodeInterface.commands = stockCommands;\n    }, 500);\n\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', [\n        new NodeModel('Manhattan'),\n        new NodeModel('Brooklyn'),\n        new NodeModel('Bronx'),\n        new NodeModel('Queens'),\n        new NodeModel('Staten Island')\n      ]),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n    this.nodes = [texas, newYork, oregon, california];\n  }\n\n  clearSelection() {\n    this.tree.clearSelection();\n  }\n}\n","import {NodeModel} from 'aurelia-tree-view';\n\nexport class NodeTemplate {\n  clickedNode = null;\n  nodes = [];\n  nodeInterface = {\n    nodeClicked: (node) => {\n      console.log(\"I'm here\", node);\n      this.clickedNode = node;\n    }\n  };\n\n  attached() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', [\n        new NodeModel('Manhattan'),\n        new NodeModel('Brooklyn'),\n        new NodeModel('Bronx'),\n        new NodeModel('Queens'),\n        new NodeModel('Staten Island')\n      ]),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n    this.nodes = [texas, newYork, oregon, california];\n  }\n}\n","import {NodeModel} from 'aurelia-tree-view';\n\nexport class Payload {\n  nodes = [];\n\n  attached() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) }),\n      new NodeModel('Houston', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) })\n    ], { test: 'the payload', num: Math.floor(Math.random() * 1000) });\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', [\n        new NodeModel('Manhattan', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) }),\n        new NodeModel('Brooklyn', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) }),\n        new NodeModel('Bronx', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) }),\n        new NodeModel('Queens', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) }),\n        new NodeModel('Staten Island', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) })\n      ], { test: 'the payload', num: Math.floor(Math.random() * 1000) }),\n      new NodeModel('Buffalo', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) })]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')], { test: 'the payload', num: Math.floor(Math.random() * 1000) });\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) }),\n      new NodeModel('San Francisco', null, { test: 'the payload', num: Math.floor(Math.random() * 1000) })\n    ], { test: 'the payload', num: Math.floor(Math.random() * 1000) });\n    this.nodes = [texas, newYork, oregon, california];\n  }\n\n  onCollapsed(e) {\n    this.logger.log(`node collapsed: ${e.detail.node.title}`);\n  }\n\n  onExpanded(e) {\n    this.logger.log(`node expanded: ${e.detail.node.title}`);\n  }\n\n  onSelect(e) {\n    this.logger.log(`node selected: ${e.detail.nodes[0].title}, ${JSON.stringify(e.detail.nodes[0].payload)}`);\n  }\n}\n","import {NodeModel} from 'aurelia-tree-view';\n\nexport class PreSelect {\n  nodes = [];\n  selected = [];\n\n  attached() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', [\n        new NodeModel('Manhattan'),\n        new NodeModel('Brooklyn'),\n        new NodeModel('Bronx'),\n        new NodeModel('Queens'),\n        new NodeModel('Staten Island')\n      ]),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n    this.nodes = [texas, newYork, oregon, california];\n    this.selected = [oregon, oregon.children[0]];\n  }\n}\n","import {computedFrom} from 'aurelia-framework';\nimport {NodeModel} from 'aurelia-tree-view';\n\nexport class SelectOnFocus {\n  nodes = [];\n  selected = [];\n\n  attached() {\n    let texas = new NodeModel('Texas', [\n      new NodeModel('Austin'),\n      new NodeModel('Houston')\n    ]);\n\n    let newYork = new NodeModel('New York', [\n      new NodeModel('New York City', () => {\n        return new Promise((resolve, reject) => {\n          window.setTimeout(() => {\n            resolve([\n              new NodeModel('Manhattan'),\n              new NodeModel('Brooklyn'),\n              new NodeModel('Bronx'),\n              new NodeModel('Queens'),\n              new NodeModel('Staten Island')\n            ]);\n          }, 500);\n        });\n      }),\n      new NodeModel('Buffalo')]);\n\n    let oregon = new NodeModel('Oregon', [new NodeModel('Portland')]);\n\n    let california = new NodeModel('California', [\n      new NodeModel('Los Angeles'),\n      new NodeModel('San Francisco')\n    ]);\n\n    let fourLevels = new NodeModel('Four Levels (level 1)', [\n      new NodeModel('Level 2', [\n        new NodeModel('Level 3', [\n          new NodeModel('Level 4')\n        ])\n      ])\n    ]);\n\n    let fiveLevels = new NodeModel('Five Levels (level 1)', [\n      new NodeModel('Level 2', [\n        new NodeModel('Level 3', [\n          new NodeModel('Level 4', [\n            new NodeModel('Level 5')\n          ])\n        ])\n      ])\n    ]);\n\n    this.nodes = [texas, newYork, oregon, california, fourLevels, fiveLevels];\n  }\n\n  selectedNodes = '';\n  onSelect(e) {\n    this.selectedNodes = this.selected.map(node => node.title).join(', ');\n  }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"..\\src"}