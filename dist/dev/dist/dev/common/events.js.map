{"version":3,"sources":["common/events.js"],"names":[],"mappings":";;;;;;;;AAAQ,e,cAAA,S;;;AAQD,eAAS,SAAT,CAAmB,OAAnB,EAAqC,IAArC,EAA+D;AAAA,YAAZ,IAAY,yDAAJ,EAAI;;AACpE,YAAI,QAAQ,IAAI,WAAJ,CAAgB,IAAhB,EAAsB;AAChC,kBAAQ,IADwB;AAEhC,mBAAS;AAFuB,SAAtB,CAAZ;AAIA,gBAAQ,aAAR,CAAsB,KAAtB;;AAEA,eAAO,KAAP;AACD;;;;AAQM,eAAS,iBAAT,CAA2B,OAA3B,EAA6C,IAA7C,EAAuE;AAAA,YAAZ,IAAY,yDAAJ,EAAI;;AAC5E,eAAO,UAAU,OAAV,OAAsB,UAAU,WAAhC,GAA8C,IAA9C,EAAsD,IAAtD,CAAP;AACD","file":"common/events.js","sourceRoot":"/source/","sourcesContent":["import {constants} from './constants';\n\n/**\n* Fire DOM event on an element\n* @param element The Element which the DOM event will be fired on\n* @param name The Event's name\n* @param data Addition data to attach to an event\n*/\nexport function fireEvent(element: Element, name: string, data? = {}) {\n  let event = new CustomEvent(name, {\n    detail: data,\n    bubbles: true\n  });\n  element.dispatchEvent(event);\n\n  return event;\n}\n\n/**\n* Fire DOM event on an element with the md-on prefix\n* @param element The Element which the DOM event will be fired on\n* @param name The Event's name, without md-on prefix\n* @param data Addition data to attach to an event\n*/\nexport function fireTreeViewEvent(element: Element, name: string, data? = {}) {\n  return fireEvent(element, `${constants.eventPrefix}${name}`, data);\n}\n"]}