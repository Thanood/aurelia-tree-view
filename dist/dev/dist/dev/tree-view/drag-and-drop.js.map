{"version":3,"sources":["tree-view/drag-and-drop.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAO,a;;;6BAGM,W;AACX,+BAAc;AAAA;AAAG;;8BAEjB,Q,qBAAS,S,EAAW;AAClB,cAAI,UAAU,QAAQ;AACpB,yBAAa,yBAAM;AACjB,kBAAI,CAAC,EAAL,EAAS;AACP,uBAAO,KAAP;AACD;;AAID,qBAAO,GAAG,OAAH,KAAe,WAAf,IAA8B,OAAO,UAAU,OAAtD;AAED,aAVmB;AAWpB,2BAAe;AAXK,WAAR,CAAd;AAaA,kBAAQ,UAAR,GAAqB,SAArB;AACA,eAAK,SAAL,CAAe,OAAf;AACA,eAAK,SAAL,CAAe,OAAf;AACD,S;;8BAED,S,sBAAU,O,EAAS;AACjB,kBAAQ,EAAR,CAAW,MAAX,EAAmB,UAAC,EAAD,EAAK,SAAL,EAAgB,MAAhB,EAA2B;AAC5C,oBAAQ,GAAR,CAAY,SAAZ;AACA,oBAAQ,MAAR;;AAEA,oBAAQ,UAAR,CAAmB,QAAnB,CAA4B,OAAO,EAAP,CAAU,WAAV,EAAuB,SAAnD,EAA8D,CAAC,UAAU,EAAV,CAAa,WAAb,KAA6B,UAAU,EAAV,CAAa,WAAb,CAA9B,EAAyD,SAAvH;AACD,WALD;AAMD,S;;8BAED,S,sBAAU,O,EAAS;AACjB,kBAAQ,EAAR,CAAW,MAAX,EAAmB,UAAC,EAAD,EAAK,SAAL,EAAgB,MAAhB,EAA2B;AAC5C,sBAAU,SAAV,CAAoB,GAApB,CAAwB,WAAxB;AACD,WAFD;AAGA,kBAAQ,EAAR,CAAW,KAAX,EAAkB,UAAC,EAAD,EAAK,SAAL,EAAgB,MAAhB,EAA2B;AAC3C,sBAAU,SAAV,CAAoB,MAApB,CAA2B,WAA3B;AACD,WAFD;AAGD,S","file":"tree-view/drag-and-drop.js","sourceRoot":"/source/","sourcesContent":["import dragula from 'dragula';\nimport 'dragula/dist/dragula.css!';\n\nexport class DragAndDrop {\n  constructor() { }\n\n  activate(viewModel) {\n    let dragApi = dragula({\n      isContainer: el => {\n        if (!el) {\n          return false;\n        }\n        // if (dragApi.dragging) {\n        //   return el.tagName === 'TREE-NODE';\n        // }\n        return el.tagName === 'TREE-NODE' || el === viewModel.element;\n        // return el.tagName === 'TREE-VIEW';\n      },\n      revertOnSpill: true\n    });\n    dragApi._viewModel = viewModel;\n    this.trackDrop(dragApi);\n    this.trackOver(dragApi);\n  }\n\n  trackDrop(dragApi) {\n    dragApi.on('drop', (el, container, source) => {\n      console.log(container);\n      dragApi.cancel();\n      // container.au['tree-node'].viewModel.model.children.push(source.au['tree-node'].viewModel.model);\n      dragApi._viewModel.moveNode(source.au['tree-node'].viewModel, (container.au['tree-node'] || container.au['tree-view']).viewModel);\n    });\n  }\n\n  trackOver(dragApi) {\n    dragApi.on('over', (el, container, source) => {\n      container.classList.add('drag-over');\n    });\n    dragApi.on('out', (el, container, source) => {\n      container.classList.remove('drag-over');\n    });\n  }\n}\n"]}