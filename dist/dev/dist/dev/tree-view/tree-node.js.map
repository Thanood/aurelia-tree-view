{"version":3,"sources":["tree-view/tree-node.js"],"names":[],"mappings":"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","file":"tree-view/tree-node.js","sourceRoot":"/source/","sourcesContent":["import {bindable, ViewCompiler, ViewResources, ViewSlot} from 'aurelia-templating';\nimport {Container, inject} from 'aurelia-dependency-injection';\nimport {TaskQueue} from 'aurelia-task-queue';\nimport {getLogger} from 'aurelia-logging';\nimport {NodeModel} from './node-model';\nimport {fireEvent} from '../common/events';\n\n@inject(Element, ViewCompiler, ViewResources, Container, TaskQueue)\nexport class TreeNode {\n  @bindable() model: NodeModel = null;\n\n  constructor(element: Element, viewCompiler: ViewCompiler, viewResources: ViewResources, container: Container, taskQueue: TaskQueue) {\n    this.element = element;\n    this.viewCompiler = viewCompiler;\n    this.viewResources = viewResources;\n    this.container = container;\n    this.taskQueue = taskQueue;\n    this.log = getLogger('tree-node');\n  }\n\n  attached() {\n    if (this.model && this.model._template && this.templateTarget) {\n      this.useTemplate();\n    }\n  }\n\n  detached() {\n    if (this.viewSlot) {\n      this.unbindTemplate();\n    }\n  }\n\n  insertChild(child: NodeModel, before: NodeModel) {\n    // TODO: insert at position\n    // let pos = this.model.children.indexOf(before);\n    this.model.children.push(child);\n  }\n\n  useTemplate() {\n    let template = this.model._template;\n    let model = this.model._templateModel;\n    let viewFactory = this.viewCompiler.compile(`<template>${template}</template>`, this.viewResources);\n    let view = viewFactory.create(this.container);\n    this.viewSlot = new ViewSlot(this.templateTarget, true);\n    this.viewSlot.add(view);\n    this.viewSlot.bind(this, model);\n    this.viewSlot.attached();\n  }\n\n  unbindTemplate() {\n    // @vegarringdal said, switch detached and unbind\n    this.viewSlot.detached();\n    this.viewSlot.unbind();\n    this.viewSlot.removeAll();\n  }\n\n  modelChanged(newValue) {\n    // this.log.debug('modelChanged', newValue, this.templateTarget);\n    if (newValue) {\n      newValue._element = this;\n      if (newValue._template && this.templateTarget) {\n        this.useTemplate();\n      }\n    }\n  }\n\n  // removeNode(node: TreeNode) { }\n  removeChild(child: NodeModel) {\n    let pos = this.model.children.indexOf(child);\n    if (pos > -1) {\n      this.model.children.splice(pos, 1);\n    } else {\n      this.log.warn('child not found in model', child, this.model.children);\n    }\n  }\n\n  focusNode(e, permitBubbles) {\n    this.model.focused = true;\n    return permitBubbles;\n  }\n\n  _toggleCalled = false;\n  toggleSelected(e, permitBubbles) {\n    if (e.ctrlKey) {\n      // make sure this is not called twice for checkboxes with child elements (f.i. MDL, Materialize)\n      if (!this._toggleCalled) {\n        this._toggleCalled = true;\n        let promise;\n        let newValue = !this.model.selected;\n        if (newValue) {\n          promise = this.model.selectChildren(e.shiftKey);\n        } else {\n          promise = this.model.deselectChildren(e.shiftKey);\n        }\n        promise.then(() => {\n          this._toggleCalled = false;\n        })\n      }\n    }\n    return permitBubbles || false;\n  }\n\n  toggleNode() {\n    if (this.model.expanded) {\n      this.model.collapseNode();\n      fireEvent(this.element, 'collapsed', { node: this.model });\n    } else {\n      this.model.expandNode();\n      fireEvent(this.element, 'expanded', { node: this.model });\n    }\n  }\n}\n"]}