{"version":3,"sources":["tree-view/tree-node-template.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAQ,Y,+BAAA,M;;AACA,e,mBAAA,S;;AACA,mB,sBAAA,a;AAAe,c,sBAAA,Q;AAAU,Y,sBAAA,M;AAAQ,oB,sBAAA,c;AAAgB,uB,sBAAA,iB;;;kCAY5C,gB,WAVZ,cAAc,oBAAd,C,UACA,Q,UACA,eAAe,UAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,EAA+B,WAA/B,EAA+C;AAC7D,YAAI,OAAO,QAAQ,SAAnB;AACA,YAAI,SAAS,EAAb,EAAiB;AACf,sBAAY,QAAZ,GAAuB,IAAvB;AACD;AACD,gBAAQ,SAAR,GAAoB,EAApB;AACD,OANA,C,UAOA,OAAO,iBAAP,C,6DAIC,0BAAY,iBAAZ,EAA+B;AAAA;;AAAA,aAF/B,GAE+B,GAFzB,UAAU,oBAAV,CAEyB;;AAC7B,aAAK,QAAL,GAAgB,kBAAkB,kBAAlB,CAAqC,QAArD;AACA,aAAK,GAAL,CAAS,KAAT,CAAe,iBAAf;AACD,O","file":"tree-view/tree-node-template.js","sourceRoot":"/source/","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\nimport {getLogger} from 'aurelia-logging';\nimport {customElement, bindable, noView, processContent, TargetInstruction} from 'aurelia-templating';\n\n@customElement('tree-node-template')\n@noView()\n@processContent((compiler, resources, element, instruction) => {\n  let html = element.innerHTML;\n  if (html !== '') {\n    instruction.template = html;\n  }\n  element.innerHTML = '';\n})\n@inject(TargetInstruction)\nexport class TreeViewTemplate {\n  log = getLogger('tree-node-template');\n\n  constructor(targetInstruction) {\n    this.template = targetInstruction.elementInstruction.template;\n    this.log.debug(targetInstruction);\n  }\n}\n"]}